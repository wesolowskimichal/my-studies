@import '../../utils/variables.scss';

$header-height: 50px;

.Wrapper {
  height: $header-height;
  z-index: 100;
  position: sticky;
  top: 0;
  background-color: $background-color;
  padding: 0.3rem;
  border: 1px solid $background-color-secondary;
  box-shadow: 0 0 10px #94f3e4;
  display: flex;
  flex-direction: row;
  column-gap: 10%;
  padding: 1rem;

  img {
    max-height: 100%;
  }

  .ElementWrapper {
    width: 100%;
    display: flex;
    justify-content: end;

    .Element {
      display: grid;
      place-content: center;
      color: white;
      text-shadow: 0 1px 0 #000;
      box-shadow: 0 0 15px #94f3e4;
      border-radius: 2em;
      flex-basis: 10%;
      text-decoration: none;
      padding: 4px;

      &::before {
        border-radius: 50%;
        background: #94f3e4;
        transition: 0.5s;
        transform: scale(0.9);
      }

      &:hover::before {
        transform: scale(1.1);
        box-shadow: 0 0 15px #94f3e4;
      }

      &:hover {
        color: #94f3e4;
        box-shadow: 0 0 5px #94f3e4;
        text-shadow: 0 0 5px #94f3e4;
        transition-duration: 0.6s;
      }
    }
  }

  .Current {
    --border-angle: 0turn; // For animation.
    --main-bg: conic-gradient(from var(--border-angle), #333f44, #1a1a1b 5%, #1a1a1b 60%, #333f44 95%);

    border: solid 5px transparent;
    --gradient-border: conic-gradient(from var(--border-angle), transparent 25%, #37aa9c, #94f3e4 99%, transparent);

    background: 
          // padding-box clip this background in to the overall element except the border.
      var(--main-bg) padding-box,
      // border-box extends this background to the border space
      var(--gradient-border) border-box,
      // Duplicate main background to fill in behind the gradient border. You can remove this if you want the border to extend "outside" the box background.
      var(--main-bg) border-box;

    background-position: center center;

    animation: bg-spin 3s linear infinite;
    @keyframes bg-spin {
      to {
        --border-angle: 1turn;
      }
    }
  }
}

@property --border-angle {
  syntax: '<angle>';
  inherits: true;
  initial-value: 0turn;
}
